{"version":3,"file":"_id_-a55ad17a.js","sources":["../../../../assets/img/email.png","../../../../pages/people/[id].vue"],"sourcesContent":["export default \"__VITE_ASSET__c39378c4__\"","<!--\r\n    Page description for a single person.\r\n    As described in the SmallCard component, the same component was used for both Person and Location since they have the same structure.\r\n-->\r\n<template>\r\n    <main id=\"back\">\r\n        <div class=\"info-group\">\r\n            <div class=\"arrow\">\r\n                <router-link to=\"/people\"><img src=\"~/assets/img/left-arrows.png\"></router-link>\r\n            </div>\r\n            <h1 class=\"name\">{{ person.name }}</h1>\r\n            <div id=\"data-container\">\r\n                <p class=\"role\">{{ person.role }}</p>\r\n                <p class=\"team\">{{ person.team }}</p>\r\n            </div>\r\n            <hr />\r\n            <div class=\"social-icons\">\r\n                <img src=\"~/assets/img/facebook.png\" alt=\"Facebook\" />\r\n                <img src=\"~/assets/img/linkedin.png\" alt=\"LinkedIn\" />\r\n                <img src=\"~/assets/img/email.png\" alt=\"Email\" />\r\n            </div>\r\n            <div class=\"row-section\">\r\n                <div class=\"column\">\r\n                    <img id=\"main-img\" :src=\"person.image\" />\r\n                </div>\r\n                <div class=\"column2\">\r\n                    <div class=\"description-containera\">\r\n                        <div class=\"button-container\" style=\"position: relative; top: 0; z-index: 1;\">\r\n                            <button class=\"section-button\" :class=\"{ active: activeSection === 1 }\" @click=\"activeSection = 1\">\r\n                                <br>\r\n                                BIO\r\n                            </button>\r\n                            <button class=\"section-button\" :class=\"{ active: activeSection === 2 }\" @click=\"activeSection = 2\">\r\n                                <br>\r\n                                AWARDS\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div class=\"description-container\" v-if=\"activeSection === 1\">\r\n                            <p2 class=\"description\">{{ person.description }}</p2>\r\n                            <p2 class=\"description\">{{ person.description2 }}</p2>\r\n                        </div>\r\n\r\n                        <div class=\"description-container\" v-else-if=\"activeSection === 2\">\r\n                            <p3 class=\"description\">\r\n                            \r\n                             <ul>\r\n                                  <li>{{ person.award1 }}</li>\r\n                                  <br>\r\n                                  <li v-if=\"person.award2 != ''\">{{ person.award2 }}</li>\r\n                                  <br>\r\n                                  <li v-if=\"person.award3 != ''\">{{ person.award3 }}</li>\r\n                                  <br>\r\n                                  <li v-if=\"person.award4 != ''\">{{ person.award4 }}</li>\r\n                            </ul>\r\n                            <!--\r\n                            <ul id=\"AwardList\"></ul>\r\n                            -->\r\n                            </p3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </div>\r\n        <div v-if=\"filtered.length > 0\">\r\n\r\n            <div class=\"row-section\">\r\n                <div class=\"text-center\">\r\n                    <p>COMPANIES IN SUPERVISION:</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"row-section2\">\r\n                <Cardsection v-for=\"company of filtered\" :subtitle=\"company.ceo\" :area=\"company.areas\" :image=\"company.image\"\r\n                    :link=\"'/companies/' + company.id\" />\r\n            </div>\r\n        </div>\r\n    </main>\r\n\r\n\r\n    <!--<SmallCard :title=\"person.company.name\" :subtitle=\"person.company.area\" :link=\"'/companies/' + person.company.id\" />-->\r\n    <!--\r\n            <div class=\"column3\">\r\n                <img src=\"image1.jpg\" alt=\"Image 1\">\r\n                <p>Text for image 1</p>\r\n            </div>\r\n            <div class=\"column3\">\r\n                <img src=\"image2.jpg\" alt=\"Image 2\">\r\n                <p>Text for image 2</p>\r\n            </div>\r\n            <div class=\"column3\">\r\n                <img src=\"image3.jpg\" alt=\"Image 3\">\r\n                <p>Text for image 3</p>\r\n            </div>\r\n</div>-->\r\n</template>\r\n        <!--\r\n            v-html allows us to change the structure of a HTML element.\r\n            It used because of the 'newLineOnFullStop' function that returns a string with the <br> tags.\r\n            This function is a composable that is available anywhere, without requiring to be imported.\r\n        -->\r\n        <!--\r\n        <p id=\"description\" v-html=\"newLineOnFullStop(person.description)\"></p>\r\n        <SmallCard :title=\"person.location.name\" :subtitle=\"person.location.city\" :link=\"'/locations/' + person.location.id\" />\r\n        -->\r\n  \r\n<script>\r\nexport default defineNuxtComponent({\r\n        data() {\r\n            return {\r\n                activeSection: 1,\r\n            };\r\n        },\r\n        async asyncData() {\r\n            // useRuntimeConfig provide us with environment variables set up in the nuxtconfig file\r\n            const route = useRoute()\r\n            const companies = await $fetch(useRuntimeConfig().public.serverURL + '/companies' + route.params.id)\r\n            return {\r\n                companies\r\n            }\r\n        }\r\n})\r\n</script>\r\n\r\n<script setup>\r\n\r\nconst route = useRoute()\r\nconst id = route.params.id\r\n// useRuntimeConfig provide us with environment variables set up in the nuxtconfig file\r\nconst { data: person } = await useFetch(useRuntimeConfig().public.serverURL + '/people/' + id)\r\n\r\nconst { data: companies } = await useFetch(useRuntimeConfig().public.serverURL + '/companies')\r\n/*\r\n    In order to implement a filter, we use the computed property.\r\n    This allows to have a cached value that contains the filtered list.\r\n    Instead of using the normal list for the cards, we used the computed property directly.\r\n*/\r\n//const role = ref(\"\");\r\nconst areas = ref(\"\");\r\n\r\nconst filtered = computed(() => {\r\n    const arrTot = []\r\n    // Checking for values where the full list is provided\r\n    for (let company of companies.value) {\r\n        if ((areas.value == 0 || areas.value == \"\") & (company.companyId == id)) {\r\n            console.log(company)\r\n            arrTot.push(company)\r\n        }\r\n    }\r\n    return arrTot\r\n\r\n    const arr = []\r\n\r\n\r\n    // Filtering the list\r\n    for (let company of companies.value) {\r\n        if (company.areas == areas.value) {\r\n            arr.push(company)\r\n        }/*\r\n        else if (company.areas.toLowerCase().includes(areas.value.toLowerCase()))\r\n            arr.push(company)*/\r\n    }\r\n\r\n    // Returning the filtered list\r\n    return arr\r\n\r\n})\r\n\r\n/*\r\n  var items = [\r\n    { text: person.award1 },\r\n    { text: person.award2 },\r\n    { text: person.award3 },\r\n    { text: person.award4 }\r\n  ];\r\n\r\n  for (var i = 0; i < items.length; i++) {\r\n    if (items[i].text !== '') {\r\n      var listItem = document.createElement('li');\r\n      listItem.textContent = items[i].text;\r\n      document.getElementById('myList').appendChild(listItem);\r\n    }\r\n  }\r\n*/\r\n\r\n</script>\r\n\r\n\r\n<style>\r\n#back {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-image: url('assets/img/19449741.jpg');\r\n    background-position-x: center;\r\n}\r\n\r\n\r\n.social-icons {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 2%;\r\n    gap: 12%;\r\n}\r\n\r\n.social-icons img {\r\n    width: 30px;\r\n    height: 30px;\r\n    padding: auto;\r\n    cursor: pointer;\r\n}\r\n\r\n.arrow {\r\n    width: 16%;\r\n    height: 15%;\r\n    padding-top: 6%;\r\n    justify-content: left;\r\n    padding-right: 70%;\r\n}\r\n\r\n.arrow img {\r\n    max-width: 12%;\r\n    max-height: 12%;\r\n    position: relative;\r\n    animation: blink 4s infinite;\r\n}\r\n\r\n@keyframes blink {\r\n    0% {\r\n        opacity: 1;\r\n    }\r\n\r\n    50% {\r\n        opacity: 0.5;\r\n    }\r\n\r\n    100% {\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n.info-group {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n}\r\n\r\n.name {\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n}\r\n\r\n#data-container {\r\n    margin-top: 10px;\r\n    font-size: 18px;\r\n}\r\n\r\n.role {\r\n    margin-top: 1%;\r\n}\r\n\r\n.team {\r\n    margin-top: 2%;\r\n}\r\n\r\nhr {\r\n    width: 70%;\r\n    border: 1px solid black;\r\n    margin: 20px 0;\r\n}\r\n\r\n.row-section {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 30px;\r\n    padding-bottom: 2%;\r\n}\r\n\r\n\r\n.column {\r\n    flex-basis: 50%;\r\n    padding-left: 2%;\r\n}\r\n\r\n.column2 {\r\n    flex-basis: 50%;\r\n    padding-right: 4%;\r\n\r\n}\r\n\r\n.column.p2 {\r\n    position: absolute;\r\n}\r\n\r\n#main-img {\r\n    width: 60%;\r\n    height: 40%;\r\n    padding-left: 10%;\r\n    display: initial;\r\n    /*\r\n    height: auto;\r\n    padding-left: 10%;\r\n    */\r\n}\r\n\r\nbutton2 {\r\n    background-color: black;\r\n    color: white;\r\n    padding: 10px;\r\n    border: none;\r\n    margin-top: 10px;\r\n}\r\n\r\nbutton2:hover {\r\n    cursor: pointer;\r\n}\r\n\r\n.description-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    text-align: justify;\r\n}\r\n\r\n.description-container p2 {\r\n    margin-bottom: 10px;\r\n    font-size: 15pt;\r\n    width: 80%;\r\n    font-family: PT sans-serif;\r\n    font-size: 1.1rem;\r\n}\r\n.description-container p3 {\r\n    margin-bottom: 8px;\r\n    font-size: 15pt;\r\n    width: 100%;\r\n    font-family: PT sans-serif;\r\n    font-size: 1.1rem;\r\n}\r\n\r\n.row6 {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    margin-top: 30px;\r\n    padding-bottom: 2%;\r\n}\r\n\r\n\r\n.description-containera {\r\n    height: 20%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin-top: 2%;\r\n    align-items: center;\r\n    text-align: justify;\r\n    padding-right: 20%;\r\n}\r\n\r\n.description-containera p2 {\r\n    height: 20%;\r\n    padding-left: -10%;\r\n    font-size: 15pt;\r\n    width: 90%;\r\n    font-family: Helvetica, Arial, sans-serif;\r\n    font-size: 1.1rem;\r\n}\r\n.description-containera p3 {\r\n    height: 20%;\r\n    padding-left: 70%;\r\n    font-size: 15pt;\r\n    width: 150%;\r\n    font-family: Helvetica, Arial, sans-serif;\r\n    font-size: 1.1rem;\r\n}\r\n\r\n.row2 {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    margin-top: 30px;\r\n    padding-bottom: 2%;\r\n}\r\n\r\n.text-center {\r\n    text-align: center;\r\n    position: absolute;\r\n    width: 100%;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    color: #333;\r\n}\r\n\r\n.column3 {\r\n    flex-basis: 20%;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    border-left: 1px solid black;\r\n}\r\n\r\n.column3:first-child {\r\n    border-left: none;\r\n}\r\n\r\n.column3 p {\r\n    font-size: 16px;\r\n}\r\n\r\n#description {\r\n    padding: 0 20px 0 20px;\r\n    font-size: 15pt;\r\n}\r\n\r\n.section-button {\r\n    padding-bottom: 2.5%;\r\n    border: none;\r\n    background: none;\r\n    cursor: pointer;\r\n    margin-right: 20px;\r\n    font-family: monospace;\r\n    color: #033f52;\r\n    font-size: 1rem;\r\n}\r\n\r\n.section-button.active {\r\n    font-family: monospace;\r\n    font-size: 1rem;\r\n    color: #033f52;\r\n    font-weight: bold;\r\n    background-color: rgb(212, 208, 208);\r\n    border-radius: 10%;\r\n}\r\n\r\n.button-container {\r\n    position: fixed;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    margin-bottom: 2%;\r\n    font-family: monospace;\r\n    color: #033f52;\r\n}\r\n</style>"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,MAAe,aAAA,KAAA,iBAAA,oBAAA;;AC2Gf,MAAA,cAAA,oCAAA;AAAA,EACA,OAAA;AACA,WAAA;AAAA,MACA,eAAA;AAAA,IACA;AAAA,EACA;AAAA,EACA,MAAA,YAAA;AAEA,UAAA,QAAA,SAAA;AACA,UAAA,YAAA,MAAA,OAAA,iBAAA,EAAA,OAAA,YAAA,eAAA,MAAA,OAAA,EAAA;AACA,WAAA;AAAA,MACA;AAAA,IACA;AAAA,EACA;AACA,CAAA;;;;;;AAKA,UAAA,QAAA,SAAA;AACA,UAAA,KAAA,MAAA,OAAA;AAEA,UAAA,EAAA,MAAA,OAAA,KAA+B,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,SAAA,iBAAA,EAAA,OAAA,YAAA,aAAA,IAAA,aAAA,CAAA;AAE/B,UAAA,EAAA,MAAA,UAAA;AAOA,UAAA,QAAA,IAAA,EAAA;AAEA,UAAA,WAAA,SAAA,MAAA;AACA,YAAA,SAAA,CAAA;AAEA,eAAA,WAAA,UAAA,OAAA;AACA,aAAA,MAAA,SAAA,KAAA,MAAA,SAAA,MAAA,QAAA,aAAA,IAAA;AACA,kBAAA,IAAA,OAAA;AACA,iBAAA,KAAA,OAAA;AAAA,QACA;AAAA,MACA;AACA,aAAA;AAAA,IAiBA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}